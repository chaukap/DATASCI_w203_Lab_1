Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
Dems = sum(q2_data$Party == 'Democrat')
Reps = sum(q2_data$Party == 'Republican')
data1 <- data.frame(
q2_data %>%
group_by(
Ordinal_Difficulty,
Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
data1 %>%
ggplot()+
aes(x = Ordinal_Difficulty, y= Percent, fill = Party)+
geom_col(position = 'dodge', alpha = .7)+
scale_fill_manual(values = c("blue", "red"))+
labs(
title    = 'title',
subtitle = 'subtitle',
x        = 'Difficulty Voting',
y        = 'Percentage of Respondents',
fill     = 'Political Affiliation'
)
Dems = sum(q2_data$Party == 'Democrat')
Reps = sum(q2_data$Party == 'Republican')
data1 <- data.frame(
q2_data %>%
group_by(
Ordinal_Difficulty,
Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
data1 %>%
ggplot()+
aes(x = Ordinal_Difficulty, y= Percent, fill = Party)+
geom_col(position = 'dodge', alpha = .7)+
scale_fill_manual(values = c("blue", "red"))+
labs(
title    = 'title',
subtitle = 'subtitle',
x        = 'Difficulty Voting',
y        = 'Percentage of Respondents',
fill     = 'Political Affiliation'
)
tab2 <- q2_data %>%
group_by(Ordinal_Difficulty) %>%
summarise(
Republican = length(which(Party == "Republican"))/Reps,
Democrat = length(which(Party == "Democrat"))/Dems
)
knitr::kable(tab2)
q2_data <- df_2020[, c('V201231x','V202119', 'V202120e','V202120i', 'V201024')] %>%
mutate(
Party = ifelse(V201231x == 1 | V201231x == 2 | V201231x == 3, 'Democrat', 'Republican'),
Ordinal_Difficulty = ifelse(V202119 == 1, 'Not Difficult at All',
ifelse(V202119 ==2, 'A Little Difficult',
ifelse(V202119 == 3, 'Moderately Difficult',
ifelse(V202119 == 4, 'Very Difficult',
ifelse(V202119 == 5, 'Extremely Difficult', NA)))))
)%>%
filter(
(V201231x >= 1 & V201231x <= 3) | (V201231x >= 5 & V201231x <= 7),
V202119 >= 1 & V202119 <= 5
)
#Rename Columns:
colnames(q2_data) <- c("Political_Affiliation", "Difficulty_Voting", "Difficulty_Getting", "Difficulty_Mailing", "Voting_Method","Party","Ordinal_Difficulty")
#Reorder Columns:
q2_data <- q2_data[,c(1,6,2,7,5,3,4)]
#Establish Order of Ordinal Variables:
q2_data$Ordinal_Difficulty <- factor(q2_data$Ordinal_Difficulty, order = TRUE,
levels = c("Not  at All", "A Little",
"Moderately", "Very",
"Extremely"))
parties <- data.frame(
Number = c('1','2','3','5','6','7'),
Affiliation = c('Strong Democrat','Not Very Strong Democrat','Independent Democrat', 'Independent Republican',
'Not Very Strong Republican','Strong Republican')
)
knitr::kable(parties)
tab1 <- table(q2_data$Party)
knitr::kable(tab1, col.names = c('Major Party','Count'))
tab4 <- table(q2_data$Political_Affiliation)
knitr::kable(tab4, col.names = c('Affiliation', 'Count'))
parties <- data.frame(
Number = c('1','2','3','5','6','7'),
Affiliation = c('Strong Democrat','Not Very Strong Democrat','Independent Democrat', 'Independent Republican',
'Not Very Strong Republican','Strong Republican')
)
knitr::kable(parties)
Dems = sum(q2_data$Party == 'Democrat')
Reps = sum(q2_data$Party == 'Republican')
data1 <- data.frame(
q2_data %>%
group_by(
Ordinal_Difficulty,
Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
data1 %>%
ggplot()+
aes(x = Ordinal_Difficulty, y= Percent, fill = Party)+
geom_col(position = 'dodge', alpha = .7)+
scale_fill_manual(values = c("blue", "red"))+
labs(
title    = 'title',
subtitle = 'subtitle',
x        = 'Difficulty Voting',
y        = 'Percentage of Respondents',
fill     = 'Political Affiliation'
)
tab2 <- q2_data %>%
group_by(Ordinal_Difficulty) %>%
summarise(
Republican = length(which(Party == "Republican"))/Reps,
Democrat = length(which(Party == "Democrat"))/Dems
)
knitr::kable(tab2)
q2_data <- df_2020[, c('V201231x','V202119', 'V202120e','V202120i', 'V201024')] %>%
mutate(
Party = ifelse(V201231x == 1 | V201231x == 2 | V201231x == 3, 'Democrat', 'Republican'),
Ordinal_Difficulty = ifelse(V202119 == 1, 'Not at All',
ifelse(V202119 ==2, 'A Little',
ifelse(V202119 == 3, 'Moderately',
ifelse(V202119 == 4, 'Very',
ifelse(V202119 == 5, 'Extremely', NA)))))
)%>%
filter(
(V201231x >= 1 & V201231x <= 3) | (V201231x >= 5 & V201231x <= 7),
V202119 >= 1 & V202119 <= 5
)
#Rename Columns:
colnames(q2_data) <- c("Political_Affiliation", "Difficulty_Voting", "Difficulty_Getting", "Difficulty_Mailing", "Voting_Method","Party","Ordinal_Difficulty")
#Reorder Columns:
q2_data <- q2_data[,c(1,6,2,7,5,3,4)]
#Establish Order of Ordinal Variables:
q2_data$Ordinal_Difficulty <- factor(q2_data$Ordinal_Difficulty, order = TRUE,
levels = c("Not at All", "A Little",
"Moderately", "Very",
"Extremely"))
Dems = sum(q2_data$Party == 'Democrat')
Reps = sum(q2_data$Party == 'Republican')
data1 <- data.frame(
q2_data %>%
group_by(
Ordinal_Difficulty,
Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
data1 %>%
ggplot()+
aes(x = Ordinal_Difficulty, y= Percent, fill = Party)+
geom_col(position = 'dodge', alpha = .7)+
scale_fill_manual(values = c("blue", "red"))+
labs(
title    = 'title',
subtitle = 'subtitle',
x        = 'Difficulty Voting',
y        = 'Percentage of Respondents',
fill     = 'Political Affiliation'
)
tab2 <- q2_data %>%
group_by(Ordinal_Difficulty) %>%
summarise(
Republican = length(which(Party == "Republican"))/Reps,
Democrat = length(which(Party == "Democrat"))/Dems
)
knitr::kable(tab2)
wilcox.test(Difficulty_Voting ~ Party, data = q2_data)
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternate = 'greater')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'greater')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'less')
t.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'less')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'less')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'greater')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'less')
t.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'less')
t.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'greater')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'greater')
wilcox.test(Difficulty_Voting ~ Party, data = q2_data)
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'greater')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stats)
library(haven)
library(xtable)
library(knitr)
#Read in data from .dta file in current working directory:
df_2020 <- read_dta(file = "data_2020.dta")
q2_data <- df_2020[, c('V201231x','V202119', 'V202120e','V202120i', 'V201024')] %>%
mutate(
Party = ifelse(V201231x == 1 | V201231x == 2 | V201231x == 3, 'Democrat', 'Republican'),
Ordinal_Difficulty = ifelse(V202119 == 1, 'Not at All',
ifelse(V202119 ==2, 'A Little',
ifelse(V202119 == 3, 'Moderately',
ifelse(V202119 == 4, 'Very',
ifelse(V202119 == 5, 'Extremely', NA)))))
)%>%
filter(
(V201231x >= 1 & V201231x <= 3) | (V201231x >= 5 & V201231x <= 7),
V202119 >= 1 & V202119 <= 5
)
#Rename Columns:
colnames(q2_data) <- c("Political_Affiliation", "Difficulty_Voting", "Difficulty_Getting", "Difficulty_Mailing", "Voting_Method","Party","Ordinal_Difficulty")
#Reorder Columns:
q2_data <- q2_data[,c(1,6,2,7,5,3,4)]
#Establish Order of Ordinal Variables:
q2_data$Ordinal_Difficulty <- factor(q2_data$Ordinal_Difficulty, order = TRUE,
levels = c("Not at All", "A Little",
"Moderately", "Very",
"Extremely"))
data1 <- data.frame(
q2_data %>%
group_by(
Ordinal_Difficulty,
Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
Dems = sum(q2_data$Party == 'Democrat')
Reps = sum(q2_data$Party == 'Republican')
data1 <- data.frame(
q2_data %>%
group_by(
Ordinal_Difficulty,
Party
) %>%
summarise(
Democrats = 100*sum(Party =='Democrat')/Dems,
Republicans = 100*sum(Party == 'Republican')/Reps
) %>%
mutate(
Percent = Democrats+Republicans
)
)
data1 %>%
ggplot()+
aes(x = Ordinal_Difficulty, y= Percent, fill = Party)+
geom_col(position = 'dodge', alpha = .7)+
scale_fill_manual(values = c("blue", "red"))+
labs(
title    = 'title',
subtitle = 'subtitle',
x        = 'Difficulty Voting',
y        = 'Percentage of Respondents',
fill     = 'Political Affiliation'
)
tab2 <- q2_data %>%
group_by(Ordinal_Difficulty) %>%
summarise(
Democrat = round((100*length(which(Party == "Democrat"))/Dems), digits = 2),
Republican = round((100*length(which(Party == "Republican"))/Reps), digits = 2)
)
knitr::kable(tab2)
wilcox.test(Difficulty_Voting ~ Party, data = q2_data, alternative = 'greater')
#2 = vote by mail, 1 = in person
tab2 <- q2_data %>%
filter(
Voting_Method == 2
) %>%
summarise(
Dem_Mail_Voters = 100*sum(Party == 'Democrat')/length(Party),
Rep_Mail_Voters = 100*sum(Party == 'Republican')/length(Party),
)
# tab2 <- q2_data %>%
#   filter(
#     Voting_Method == 1
#   ) %>%
#   summarise(
#    Dem_In_Person_Voters = sum(Democrat)/length(Democrat)
#)
knitr::kable(tab2)
Getting_to_Polls <- q2_data %>%
filter(
(Difficulty_Getting >= 0)
) %>%
select(
Party,
Difficulty_Getting
)
t.test(Getting_to_Polls$Difficulty_Getting ~ Getting_to_Polls$Party)
Mail<- q2_data %>%
filter(
(Difficulty_Mailing >= 0)
) %>%
select(
Party,
Difficulty_Mailing
)
t.test(Mail$Difficulty_Mailing ~ Mail$Party, conf.level = .95)
#2 = vote by mail, 1 = in person
tab2 <- q2_data %>%
filter(
Voting_Method == 2
) %>%
summarise(
Dem_Mail_Voters = 100*sum(Party == 'Democrat')/length(Party),
Rep_Mail_Voters = 100*sum(Party == 'Republican')/length(Party),
)
knitr::kable(tab2)
.02/5
?bionom.test
library(dplyr)
library(ggplot2)
library(tidyverse)
library(stats)
library(haven)
?binom.test
library(dplyr)
library(ggplot2)
library(tidyverse)
library(stats)
library(haven)
df_2020 <- read_dta(file = "./working_directory/data_2020.dta")
question3Data <- df_2020[, c("V202310", "V201145", "V201146")]
colnames(question3Data) <- c("ImportanceOfScience", "ApproveGovernorsHandling",
"StronglyOrNotStrongly")
question3Data <- question3Data[question3Data$ApproveGovernorsHandling == 1 |
question3Data$ApproveGovernorsHandling == 2, ]
question3Data <- question3Data[question3Data$ImportanceOfScience > 0, ]
question3Data$ApproveGovernorsHandling <- question3Data$ApproveGovernorsHandling == 1
question3Data$IsScienceImportant <- question3Data$ImportanceOfScience > 1
print_labels(question3Data$ImportanceOfScience)
respondents <- length(question3Data$ImportanceOfScience)
extremely <- 100 * sum(question3Data$ImportanceOfScience == 5) / respondents
very <- 100 * sum(question3Data$ImportanceOfScience == 4) / respondents
moderately <- 100 * sum(question3Data$ImportanceOfScience == 3) / respondents
aLittle <- 100 * sum(question3Data$ImportanceOfScience == 2) / respondents
not <- 100 * sum(question3Data$ImportanceOfScience == 1) / respondents
approved <- 100 * sum(question3Data$ApproveGovernorsHandling == TRUE) / respondents
disapproved <- 100 * sum(question3Data$ApproveGovernorsHandling == FALSE) / respondents
difficulty_histogram <- question3Data %>%
ggplot() +
aes(x = factor(ImportanceOfScience), fill = ApproveGovernorsHandling) +
geom_histogram(position = 'dodge', color = 'black', stat="count") +
scale_fill_manual(values = c("red", "blue"),
labels = c("Disapprove", "Approve"),
name = "Approve of Governor's\nHandling of COVID-19") +
labs(
title    = 'Approval or disaproval of the respondent\'s governor\'s handling of the\nCOVID-19 pandemic grouped by how important the respondent believes\nscience is in making government decisions about the pandemic.',
x        = 'Importance of Science',
y        = 'Voters',
fill     = 'Approve of Governor'
) +
scale_x_discrete(labels= c("Not at all important", "A little important",
"Moderately important", "Very important",
"Extremely important"),
guide = guide_axis(angle = -15))
difficulty_histogram
tab <- table(question3Data$ApproveGovernorsHandling, question3Data$IsScienceImportant)
row.names(tab) <- c("Disapprove of Governor", "Approve of Governor")
colnames(tab) <- c("Science isn't important", "Science is Important")
tab
binom.test(question3Data$ApproveGovernorsHandling ~ question3Data$IsScienceImportant)
clear()
library(dplyr)
library(ggplot2)
library(tidyverse)
library(stats)
library(haven)
df_2020 <- read_dta(file = "./working_directory/data_2020.dta")
question3Data <- df_2020[, c("V202310", "V201145", "V201146")]
colnames(question3Data) <- c("ImportanceOfScience", "ApproveGovernorsHandling",
"StronglyOrNotStrongly")
question3Data <- question3Data[question3Data$ApproveGovernorsHandling == 1 |
question3Data$ApproveGovernorsHandling == 2, ]
question3Data <- question3Data[question3Data$ImportanceOfScience > 0, ]
question3Data$ApproveGovernorsHandling <- question3Data$ApproveGovernorsHandling == 1
question3Data$IsScienceImportant <- question3Data$ImportanceOfScience > 1
print_labels(question3Data$ImportanceOfScience)
respondents <- length(question3Data$ImportanceOfScience)
extremely <- 100 * sum(question3Data$ImportanceOfScience == 5) / respondents
very <- 100 * sum(question3Data$ImportanceOfScience == 4) / respondents
moderately <- 100 * sum(question3Data$ImportanceOfScience == 3) / respondents
aLittle <- 100 * sum(question3Data$ImportanceOfScience == 2) / respondents
not <- 100 * sum(question3Data$ImportanceOfScience == 1) / respondents
approved <- 100 * sum(question3Data$ApproveGovernorsHandling == TRUE) / respondents
disapproved <- 100 * sum(question3Data$ApproveGovernorsHandling == FALSE) / respondents
difficulty_histogram <- question3Data %>%
ggplot() +
aes(x = factor(ImportanceOfScience), fill = ApproveGovernorsHandling) +
geom_histogram(position = 'dodge', color = 'black', stat="count") +
scale_fill_manual(values = c("red", "blue"),
labels = c("Disapprove", "Approve"),
name = "Approve of Governor's\nHandling of COVID-19") +
labs(
title    = 'Approval or disaproval of the respondent\'s governor\'s handling of the\nCOVID-19 pandemic grouped by how important the respondent believes\nscience is in making government decisions about the pandemic.',
x        = 'Importance of Science',
y        = 'Voters',
fill     = 'Approve of Governor'
) +
scale_x_discrete(labels= c("Not at all important", "A little important",
"Moderately important", "Very important",
"Extremely important"),
guide = guide_axis(angle = -15))
difficulty_histogram
tab <- table(question3Data$ApproveGovernorsHandling, question3Data$IsScienceImportant)
row.names(tab) <- c("Disapprove of Governor", "Approve of Governor")
colnames(tab) <- c("Science isn't important", "Science is Important")
tab
??xtable
tba
tab
?prop.test
library(dplyr)
library(ggplot2)
library(tidyverse)
library(stats)
library(haven)
df_2020 <- read_dta(file = "./working_directory/data_2020.dta")
question3Data <- df_2020[, c("V202310", "V201145", "V201146")]
colnames(question3Data) <- c("ImportanceOfScience", "ApproveGovernorsHandling",
"StronglyOrNotStrongly")
question3Data <- question3Data[question3Data$ApproveGovernorsHandling == 1 |
question3Data$ApproveGovernorsHandling == 2, ]
question3Data <- question3Data[question3Data$ImportanceOfScience > 0, ]
question3Data$ApproveGovernorsHandling <- question3Data$ApproveGovernorsHandling == 1
print_labels(question3Data$ImportanceOfScience)
respondents <- length(question3Data$ImportanceOfScience)
extremely <- 100 * sum(question3Data$ImportanceOfScience == 5) / respondents
very <- 100 * sum(question3Data$ImportanceOfScience == 4) / respondents
moderately <- 100 * sum(question3Data$ImportanceOfScience == 3) / respondents
aLittle <- 100 * sum(question3Data$ImportanceOfScience == 2) / respondents
not <- 100 * sum(question3Data$ImportanceOfScience == 1) / respondents
approved <- 100 * sum(question3Data$ApproveGovernorsHandling == TRUE) / respondents
disapproved <- 100 * sum(question3Data$ApproveGovernorsHandling == FALSE) / respondents
difficulty_histogram <- question3Data %>%
ggplot() +
aes(x = factor(ImportanceOfScience), fill = ApproveGovernorsHandling) +
geom_histogram(position = 'dodge', color = 'black', stat="count") +
scale_fill_manual(values = c("red", "blue"),
labels = c("Disapprove", "Approve"),
name = "Approve of Governor's\nHandling of COVID-19") +
labs(
title    = 'Approval or disaproval of the respondent\'s governor\'s handling of the\nCOVID-19 pandemic grouped by how important the respondent believes\nscience is in making government decisions about the pandemic.',
x        = 'Importance of Science',
y        = 'Voters',
fill     = 'Approve of Governor'
) +
scale_x_discrete(labels= c("Not at all important", "A little important",
"Moderately important", "Very important",
"Extremely important"),
guide = guide_axis(angle = -15))
difficulty_histogram
question3Data$IsScienceImportant <- question3Data$ImportanceOfScience > 1
tab <- table(question3Data$ApproveGovernorsHandling, question3Data$IsScienceImportant)
row.names(tab) <- c("Disapprove of Governor", "Approve of Governor")
colnames(tab) <- c("Science isn't important", "Science is important")
tab
prop.test(tab)
t.test(question3Data$ApproveGovernorsHandling ~ question3Data$IsScienceImportant, alternative = "g")
prop.test(tab, alternative = "g")
t.test(question3Data$ApproveGovernorsHandling ~ question3Data$IsScienceImportant, alternative = "g")
table(question3Data$ApproveGovernorsHandling, question3Data$IsScienceImportant)
table(question3Data$IsScienceImportant, question3Data$ApproveGovernorsHandling)
tab <- table(question3Data$IsScienceImportant, question3Data$ApproveGovernorsHandling)
prop.test(tab, alternative = "g")
t.test(question3Data$ApproveGovernorsHandling ~ question3Data$IsScienceImportant, alternative = "g")
prop.test(tab, alternative = "1")
prop.test(tab, alternative = "l")
t.test(question3Data$ApproveGovernorsHandling ~ question3Data$IsScienceImportant, alternative = "g")
t.test(question3Data$ApproveGovernorsHandling ~ question3Data$IsScienceImportant, alternative = "g")
?binom.test
binom.test(question3Data$ApproveGovernorsHandling[question3Data$IsScienceImportant == TRUE])
sum(question3Data$ApproveGovernorsHandling[question3Data$IsScienceImportant == TRUE]) / length(question3Data$ApproveGovernorsHandling[question3Data$IsScienceImportant == TRUE])
binom.test(question3Data$ApproveGovernorsHandling[question3Data$IsScienceImportant == TRUE]) / length(question3Data$ApproveGovernorsHandling[question3Data$IsScienceImportant == TRUE])
tan
tab
76 + 41
tinytex::install_tinytex()
